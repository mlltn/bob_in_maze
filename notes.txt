
IDEAS
- option to show sliders in random order
- Base component could be composition and some kinda plugin the cond"uctor

TODO

Bugs:

Actual experiment:
- 

Data stored in database:
- save results to database

Customizable with JSON:
- move all hard coded values to JSON
- generate default props if missing

Support for adding instruction slides:


Various:

Refactoring:
- remove experiment SliderMenu id hardcoding, :content="content["SliderMenu#experiment"]", id="SliderMenu#experiment"
- parse component inside pages to have nicer state (easy to refactor in utils methods)
- naming of the "content" in Brick is confusing as its prop and var in for
- Handle props cleaner (get rid of $attrs...)
- refactor utils to more meaningful modules
- get rid of most of composition related props and use state
- setup state mutation commit
- add styles cleaner
- event bus stuff to store
- common next button
- All components should use the pages.components binding if they hold data in the future
- make general resetter in page nextPage method (now there is specific resetter for slidermenu)


Nice to have:
- Make Conductor general (eg. the locations to fetch images at mount and component composition)
- Reuse SliderMenu component better (currently new created for every task e.g. v-show instead of v-if)

**************************************************
BEFORE PRODUCTION
- dev mods behind access code
- ensure progress bar and other elements which are not generated from template are same in experiment and templates


VIPJONO
-master code
    - skip practise button
- 
- Access code input
- collect results to state
- Setup database connection

CURRENT ISSUES
- maali
- styling 

**************************************************

+ progress bar
+ randomize mode between 1 and 2
+ BUG / experiment pics and modes out of sync   
+ previous button 
+ BUG / sliders not resetting in practice mode
+ dev helpers (component ids on ui while developing)
+ templates referring to same data in bg -> add page name to component id
+ stimulus / test image mismatches caused by the temporary "step" variable
+ randomize imgages in experiments
+ BUG / sliders not updated to template
+ BUG / template components in every instance of the template page
+ implement template support
+ fix deep copy
+ Refactor important component state management to vuex
+ page states store
+ Next page button functionality
+ register components automatically
+ Use flex box instead of inline-block for horizontal
+ Generate component store state from composition
+ parse composition from JSON
+ localization support
+ disable next button while invalid answer
+ Add ability to switch between experiment modes
+ Fetch images from folder
+ refactoring
+ setup vuex store
+ enable button when valid answer
+ slider colors with element ui style customization
+ dynamic colors